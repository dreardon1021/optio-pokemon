{"version":3,"sources":["apiCalls/gqlCalls.ts","util/appendOptionalClasses.ts","blocks/H3.tsx","blocks/PrimaryButton.tsx","util/capitalizeFirstLetter.ts","components/PokemonType/PokemonType.tsx","components/PokemonCard/PokemonCard.tsx","components/PokeList/PokeList.tsx","apiCalls/GetPokeList.tsx","assets/PokeLogo.png","components/NavBar/NavBar.tsx","blocks/H2.tsx","components/PokemonStats/PokemonStats.tsx","components/PokemonDetailCard/PokemonDetail.tsx","App.tsx","index.tsx"],"names":["GET_POKEMONS","gql","FIND_ONE_POKEMON","GET_POKE_DETAILS","appendOptionalClasses","baseClasses","appendedClasses","H3","children","className","classes","PrimaryButton","type","capitalizeFirstLetter","word","charAt","toUpperCase","slice","PokemonType","types","pokemonName","map","name","typeName","PokemonCard","image","useQuery","variables","loading","error","data","message","pokemon","src","alt","to","pathname","state","PokeList","allPokemon","useState","currentPage","setCurrentPage","pokemonCount","length","indexOfLastPokemon","indexOfFirstPokemon","currentPokemon","pageNumbers","i","Math","ceil","push","renderPageButtons","number","id","onClick","e","Number","currentTarget","withRouter","limit","offset","pokemons","results","NavBar","PokeLogo","H2","PokemonStats","exampleMoves","moves","abilities","ability","height","weight","move","pokeImage","match","location","url","App","exact","path","component","GetPokeList","render","props","PokemonDetail","client","ApolloClient","uri","cache","InMemoryCache","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.10f081c3.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GET_POKEMONS = gql`\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      results {\n        url\n        name\n        image\n      }\n    }\n  }\n`;\n\nexport const FIND_ONE_POKEMON = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name) {\n      name\n      types {\n        type {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_POKE_DETAILS = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name) {\n      id\n      name\n      height\n      weight\n      base_experience\n      moves {\n        move {\n          name\n        }\n      }\n      abilities {\n        ability {\n          name\n        }\n      }\n      types {\n        type {\n          name\n        }\n      }\n    }\n  }\n`;\n","export const appendOptionalClasses = (baseClasses: string, appendedClasses: string | undefined): string => {\n  if (!appendedClasses) return baseClasses;\n  return `${baseClasses} ${appendedClasses}`;\n};\n","import React, { FC } from \"react\";\nimport { appendOptionalClasses } from \"../util/appendOptionalClasses\";\n\ninterface Props {\n  className?: string;\n}\nexport const H3: FC<Props> = ({ children, className }) => {\n  const baseClasses = \"text-2xl mb-4\";\n  const classes = appendOptionalClasses(baseClasses, className);\n  return <h3 className={classes}>{children}</h3>;\n};\n","import React, { FC } from \"react\";\nimport { appendOptionalClasses } from \"../util/appendOptionalClasses\";\n\ninterface Props {\n  className?: string;\n  type?: \"button\" | \"submit\";\n}\n\nconst PrimaryButton: FC<Props> = ({ className, children, type }) => {\n  const baseClasses =\n    \"border-2 border-black border-solid rounded-lg bg-pokemon-theme-yellow w-24 font-semibold shadow-sm cursor-pointer hover:opacity-75 focus:opacity-75\";\n  const classes = appendOptionalClasses(baseClasses, className);\n  return (\n    <button type={type} className={classes}>\n      {children}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n","export const capitalizeFirstLetter = (word: string): string => {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n};\n","import React, { FC } from \"react\";\nimport { TypeObject } from \"../../types/Pokemon\";\nimport { capitalizeFirstLetter } from \"../../util/capitalizeFirstLetter\";\n\ninterface Props {\n  types: TypeObject[] | undefined;\n  pokemonName: string;\n}\n\nconst PokemonType: FC<Props> = ({ types, pokemonName }) => {\n  const capitalPokeType = (typeName: string): string => {\n    return capitalizeFirstLetter(typeName);\n  };\n\n  return (\n    <div className=\"rounded-lg w-full flex flex-col items-center\">\n      {types?.map((type: TypeObject) => {\n        return (\n          <p\n            className={`text-white font-semibold text-center md:w-3/5 bg-pokemon-${type.type.name} rounded-lg p-1 border-solid border-black border-2 mb-2 w-full`}\n            key={type.type.name + pokemonName}\n          >\n            {capitalPokeType(type.type.name)}\n          </p>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PokemonType;\n","import React, { FC } from \"react\";\nimport { H3 } from \"../../blocks/H3\";\nimport { FIND_ONE_POKEMON } from \"../../apiCalls/gqlCalls\";\nimport { FetchOnePokemon, OnePokeVariables } from \"../../types/Pokemon\";\nimport { useQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport PrimaryButton from \"../../blocks/PrimaryButton\";\nimport PokemonType from \"../PokemonType/PokemonType\";\nimport { capitalizeFirstLetter } from \"../../util/capitalizeFirstLetter\";\n\ninterface Props {\n  name: string;\n  image: string;\n}\n\nconst PokemonCard: FC<Props> = ({ name, image }) => {\n  const { loading, error, data } = useQuery<FetchOnePokemon, OnePokeVariables>(FIND_ONE_POKEMON, {\n    variables: { name: name },\n  });\n\n  if (loading) {\n    return (\n      <article className=\"w-2/5 flex flex-col items-center justify-between p-4 rounded-lg border-solid border-2 border-black mb-4\">\n        <H3>Loading</H3>\n      </article>\n    );\n  }\n\n  if (error) {\n    return (\n      <article className=\"w-2/5 flex flex-col items-center justify-between p-4 rounded-lg border-solid border-2 border-black mb-4\">\n        <H3>{`Error: ${error.message}`}</H3>\n      </article>\n    );\n  }\n\n  return (\n    <article\n      className={`bg-pokemon-${data?.pokemon.types[0].type.name} w-4/5 sm:w-2/5 flex flex-col items-center justify-between p-4 rounded-xl mt-4`}\n    >\n      <H3 className=\"text-white\">{capitalizeFirstLetter(name)}</H3>\n      <div className=\"flex justify-around w-full\">\n        <div className=\"w-2/5\">\n          <PokemonType types={data?.pokemon.types} pokemonName={name} />\n        </div>\n        <img className=\"w-2/5\" src={image} alt={name} />\n      </div>\n      <Link\n        className=\"w-2/5\"\n        to={{\n          pathname: `/${name}`,\n          state: {\n            image: image,\n          },\n        }}\n      >\n        <PrimaryButton className=\"w-full\">View</PrimaryButton>\n      </Link>\n    </article>\n  );\n};\n\nexport default PokemonCard;\n","import React, { FC, useState } from \"react\";\nimport { SinglePokemon } from \"../../types/Pokemon\";\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\n\ninterface Props {\n  allPokemon: SinglePokemon[] | undefined;\n}\n\nconst PokeList: FC<Props> = ({ allPokemon }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const pokemonCount = allPokemon?.length;\n  const pokemonPerPage = 10;\n\n  const indexOfLastPokemon = currentPage * pokemonPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonPerPage;\n  const currentPokemon = allPokemon?.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  const pageNumbers = [];\n\n  if (pokemonCount) {\n    for (let i = 1; i <= Math.ceil(pokemonCount / pokemonPerPage); i++) {\n      pageNumbers.push(i);\n    }\n  }\n\n  const renderPageButtons = pageNumbers.map((number) => {\n    return (\n      <li\n        className={\n          (currentPage === number ? \"bg-pokemon-theme-blue \" : \"\") +\n          \"bg-pokemon-theme-yellow font-semi-bold w-12 rounded-lg ml-2 mt-2 border-black border-solid border-2\"\n        }\n        key={`page-${number}`}\n      >\n        <button\n          id={`page-${number}`}\n          onClick={(e) => setCurrentPage(Number(e.currentTarget.id.slice(5)))}\n          className=\"cursor-pointer w-full\"\n        >\n          {number}\n        </button>\n      </li>\n    );\n  });\n\n  const renderCurrentPokemon = () => {\n    return (\n      <div className=\"w-full flex justify-around flex-wrap\">\n        {currentPokemon?.map((pokemon) => {\n          return <PokemonCard key={pokemon.name} name={pokemon.name} image={pokemon.image} />;\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <section className=\"w-full flex flex-col items-center\">\n      <ul className=\"flex flex-wrap justify-between w-4/5 mt-8 mb-8\">{renderPageButtons}</ul>\n      {renderCurrentPokemon()}\n      <ul className=\"flex flex-wrap justify-between w-4/5 mt-8 mb-8\">{renderPageButtons}</ul>\n    </section>\n  );\n};\n\nexport default PokeList;\n","import React, { FC } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_POKEMONS } from \"./gqlCalls\";\nimport { FullPokemonList } from \"../types/Pokemon\";\nimport PokeList from \"../components/PokeList/PokeList\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\ninterface PokeVariables {\n  limit: number;\n  offset: number;\n}\n\nconst GetPokeList: FC<RouteComponentProps> = () => {\n  const { loading, error, data } = useQuery<FullPokemonList, PokeVariables>(GET_POKEMONS, {\n    variables: { limit: 150, offset: 0 },\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{`error: ${error.message}`}</p>;\n  }\n\n  return <PokeList allPokemon={data?.pokemons?.results} />;\n};\n\nexport default withRouter(GetPokeList);\n","export default __webpack_public_path__ + \"static/media/PokeLogo.03d2cb1c.png\";","import React, { FC } from \"react\";\nimport PokeLogo from \"../../assets/PokeLogo.png\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar: FC = () => {\n  return (\n    <nav className=\"w-full flex justify-center\">\n      <Link to=\"/\">\n        <img className=\"max-h-40 cursor-pointer\" src={PokeLogo} alt=\"pokemon-logo\" />\n      </Link>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { FC } from \"react\";\nimport { appendOptionalClasses } from \"../util/appendOptionalClasses\";\n\ninterface Props {\n  className?: string;\n}\nexport const H2: FC<Props> = ({ children, className }) => {\n  const baseClasses = \"text-3xl mb-4\";\n  const classes = appendOptionalClasses(baseClasses, className);\n  return <h2 className={classes}>{children}</h2>;\n};\n","import React, { FC } from \"react\";\nimport { H3 } from \"../../blocks/H3\";\nimport { DetailedPokeData } from \"../../types/Pokemon\";\nimport { capitalizeFirstLetter } from \"../../util/capitalizeFirstLetter\";\n\ninterface Props {\n  data: DetailedPokeData | undefined;\n}\n\nconst PokemonStats: FC<Props> = ({ data }) => {\n  const exampleMoves = data?.pokemon.moves.slice(0, 4);\n\n  return (\n    <>\n      <hr className=\"h-1 w-full mt-4\" />\n      <div className=\"text-white flex flex-col items-center w-full mt-4\">\n        <H3 className=\"text-center text-white\">Abilities</H3>\n        {data?.pokemon?.abilities.map((ability) => {\n          return (\n            <p className=\"text-lg font-semibold mb-1\" key={ability.ability.name}>\n              {capitalizeFirstLetter(ability.ability.name)}\n            </p>\n          );\n        })}\n        <hr className=\"h-1 w-full mt-4 mb-4\" />\n        <H3 className=\"text-center text-white\">Height & Weight</H3>\n        <p className=\"text-lg font-semibold\">{`Height: ${data?.pokemon?.height}`}</p>\n        <p className=\"text-lg font-semibold\">{`Weight: ${data?.pokemon?.weight}`}</p>\n        <hr className=\"h-1 w-full mt-4 mb-4\" />\n        <H3 className=\"text-center text-white\">Example Moves</H3>\n        {exampleMoves &&\n          exampleMoves.map((move) => {\n            return (\n              <p className=\"text-lg font-semibold mb-1\" key={`${data?.pokemon.name}-${move.move.name}`}>\n                {capitalizeFirstLetter(move.move.name)}\n              </p>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default PokemonStats;\n","import React, { FC } from \"react\";\nimport { H2 } from \"../../blocks/H2\";\nimport { H3 } from \"../../blocks/H3\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_POKE_DETAILS } from \"../../apiCalls/gqlCalls\";\nimport { DetailedPokeData, OnePokeVariables } from \"../../types/Pokemon\";\nimport PokemonType from \"../PokemonType/PokemonType\";\nimport PokemonStats from \"../PokemonStats/PokemonStats\";\nimport { capitalizeFirstLetter } from \"../../util/capitalizeFirstLetter\";\nimport PrimaryButton from \"../../blocks/PrimaryButton\";\nimport { Link } from \"react-router-dom\";\n\ninterface Location {\n  location: {\n    state: {\n      image: string;\n    };\n  };\n}\n\nconst PokemonDetailCard: FC<RouteComponentProps & Location> = ({ match, location }) => {\n  const name = match.url.slice(1);\n  let pokeImage;\n  if (location.state.image) {\n    pokeImage = location.state.image;\n  }\n\n  const { loading, error, data } = useQuery<DetailedPokeData, OnePokeVariables>(GET_POKE_DETAILS, {\n    variables: { name: name },\n  });\n\n  if (loading) {\n    return (\n      <article className=\"w-2/5 flex flex-col items-center justify-between p-4 rounded-lg border-solid border-2 border-black mb-4\">\n        <H3>Loading</H3>\n      </article>\n    );\n  }\n\n  if (error) {\n    return (\n      <article className=\"w-2/5 flex flex-col items-center justify-between p-4 rounded-lg border-solid border-2 border-black mb-4\">\n        <H3>{`Error: ${error.message}`}</H3>\n      </article>\n    );\n  }\n\n  return (\n    <section\n      className={`w-3/4 p-4 bg-pokemon-${data?.pokemon.types[0].type.name} flex flex-col justify-between items-center mt-8 mb-12 rounded-2xl`}\n    >\n      <H2 className=\"text-white\">{capitalizeFirstLetter(name)}</H2>\n      <div className=\"flex flex-col md:flex-row justify-between w-full\">\n        <img className=\"w-full\" src={pokeImage} alt={`image-of-${name}`} />\n        <div className=\"w-full flex flex-col justify-items-center\">\n          <PokemonType types={data?.pokemon.types} pokemonName={name} />\n          <PokemonStats data={data} />\n        </div>\n      </div>\n      <Link className=\"mt-12 w-1/4\" to=\"/\">\n        <PrimaryButton className=\"w-full\">Go Back</PrimaryButton>\n      </Link>\n    </section>\n  );\n};\n\nexport default withRouter(PokemonDetailCard);\n","import React, { FC } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport GetPokeList from \"./apiCalls/GetPokeList\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport PokemonDetailCard from \"./components/PokemonDetailCard/PokemonDetail\";\n\nconst App: FC = () => {\n  return (\n    <main className=\"flex flex-col items-center\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={GetPokeList} />\n        <Route exact path=\"/:name\" render={(props) => <PokemonDetailCard {...props} />} />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://graphql-pokeapi.vercel.app/api/graphql\",\n  cache: new InMemoryCache(),\n});\n\nconst router = (\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>\n);\n\nReactDOM.render(router, document.getElementById(\"root\"));\n"],"sourceRoot":""}